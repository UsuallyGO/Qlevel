
IF(COMMAND cmake_policy)
    CMAKE_POLICY(SET CMP0003 NEW)
ENDIF()

PROJECT(Qlevel)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0)

AUX_SOURCE_DIRECTORY(. LOCAL_SRCS)
AUX_SOURCE_DIRECTORY(../dbimpl DBIMPL_SRCS)
AUX_SOURCE_DIRECTORY(../port PORT_SRCS)

INCLUDE_DIRECTORIES(../ ../include)
SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
SET(QLEVEL_LIB qlevel)
IF(${BUILD_STATIC} STREQUAL yes)
	ADD_LIBRARY(${QLEVEL_LIB} STATIC ${LOCAL_SRCS} ${DBIMPL_SRCS} ${PORT_SRCS})
ELSE()
	ADD_LIBRARY(${QLEVEL_LIB} SHARED ${LOCAL_SRCS} ${DBIMPL_SRCS} ${PORT_SRCS})
ENDIF()

#Build all the source files to be a library(static or dynamic), so we do not 
#need to link pthread here
#TARGET_LINK_LIBRARIES(${QLEVEL_LIB} pthread) 

INSTALL(TARGETS ${QLEVEL_LIB}
	LIBRARY DESTINATION lib
	ARCHIVE DESTINATION lib
)

INSTALL(
	DIRECTORY ../include/
	DESTINATION ${CMAKE_INSTALL_PREFIX}/include
)

